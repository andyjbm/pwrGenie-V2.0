; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = ESP32_s2_mini_JKBMS
lib_dir = pio\lib
src_dir = pio\src

;FIRMWARES FOR ESP8266
;*********************
[env:ESP8266_SPLMeter]
extends = env:Release8266
build_flags = 
	${env:Release8266.build_flags}
	-D PWR_GENIE_TYPE_SPL=1

[env:ESP8266_EM21]
extends = env:Release8266
build_flags = 
	${env:Release8266.build_flags}
	-D PWR_GENIE_TYPE_EM21=2

[env:ESP8266_APM303]
extends = env:Release8266
build_flags = 
	${env:Release8266.build_flags}
	-D PWR_GENIE_TYPE_APM303=2

[env:ESP8266_APM403]
extends = env:Release8266
build_flags = 
	${env:Release8266.build_flags}
	-D PWR_GENIE_TYPE_APM403=2

[env:ESP8266_DSE]
extends = env:Release8266
build_flags = 
	${env:Release8266.build_flags}
	-D PWR_GENIE_TYPE_DSE=2

;FIRMWARES FOR ESP32-S2-MINI
;***************************
[env:ESP32_s2_mini_SPLMeter]
extends = env:Release32_s2_mini
build_flags = 
	${env:Release32_s2_mini.build_flags}
	-D PWR_GENIE_TYPE_SPL=1
	
[env:ESP32_s2_mini_EM21]
extends = env:Release32_s2_mini
build_flags = 
	${env:Release32_s2_mini.build_flags}
	-D PWR_GENIE_TYPE_EM21=2

[env:ESP32_s2_mini_APM303]
extends = env:Release32_s2_mini
build_flags = 
	${env:Release32_s2_mini.build_flags}
	-D PWR_GENIE_TYPE_APM303=2

[env:ESP32_s2_mini_APM403]
extends = env:Release32_s2_mini
build_flags = 
	${env:Release32_s2_mini.build_flags}
	-D PWR_GENIE_TYPE_APM403=2

[env:ESP32_s2_mini_DSE]
extends = env:Release32_s2_mini
build_flags = 
	${env:Release32_s2_mini.build_flags}
	-D PWR_GENIE_TYPE_DSE=2

[env:ESP32_s2_mini_JKBMS]
extends = env:Release32_s2_mini
build_flags = 
	${env:Release32_s2_mini.build_flags}
	-D PWR_GENIE_TYPE_JKBMS=6

;*********************************************

;Everything above here uses everything below 
;to build the receipe for the board & Firmware
;combination that is being built

;********************************************


;BOARDS
;******

;ESP8266
[env:Release8266]
extends = ESP8266

[env:Debug8266]
extends = ESP8266, debug

;[env:Stacktrace8266]
;extends = env:Debug8266
;monitor_filters = 
;	esp8266_exception_decoder
;	default

;ESP32-S2-mini
[env:Release32_s2_mini]
extends = ESP32_base
board = lolin_s2_mini

[env:Debug32_s2_mini]
extends = env:Release32_s2_mini, env:debug

;ESP32-VROOM & Derivatives
[env:ESP32doit-devkit-v1]
extends = ESP32_base
board = esp32doit-devkit-v1


; PROCESSORS
;***********
[ESP8266]
platform = espressif8266
board = d1_mini
build_flags = -D USING_8266=true
lib_ignore = SPIFFSEditor
;lib_deps = https://github.com/me-no-dev/ESPAsyncUDP

[ESP32_base]
platform = espressif32
build_flags = -D USING_ESP32_S2=true
lib_ignore = ESPAsyncUDP
lib_deps = 
	${env.lib_deps}
	plerup/EspSoftwareSerial @ 8.1.0 ; 8.2.0 has a dependency bug - see: https://community.platformio.org/t/fatal-error-circular-queue-h-no-such-file-or-directory-espsoftwareserial-h/37959
;	featherfly/SoftwareSerial @ ^1.0


;Projecte Environments
;*********************
[env]
;lib_ldf_mode = chain+
;lib_compat_mode = strict
framework = arduino
monitor_speed = 921600
upload_speed = 921600
lib_deps = ArduinoJson@ 6

[debug]
build_type = debug
debug_build_flags = 
	-D _WIFIMGR_LOGLEVEL_=3
